/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package misClases;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author lenovo
 */
public class JFramePersonaje extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel("/misClases/recursos/pWall.jpg");

    
    public JFramePersonaje() {
        initComponents();
        Pselect.setVisible(false); // Oculto
        
        cambiarIcono(jButton2, ControlMusica.estaPausada()
            ? "/misClases/recursos/playBtn.png"
            : "/misClases/recursos/pauseBtn.png");
        cambiarIcono(jButton1, "/misClases/recursos/casa.png");
        
        if (!ControlMusica.estaPausada()) {
            ControlMusica.iniciarMusica("/misClases/recursos/MusicaFondo.wav");
        }
        
        generarTableroPersonajes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new FondoPanel("/misClases/recursos/pWall.jpg");
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new FondoPanel("/misClases/recursos/pWall.jpg");
        Pselect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/misClases/recursos/casa.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/misClases/recursos/playBtn.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ELEGIR PERSONAJE");

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout());

        Pselect.setText("Continuar");
        Pselect.setEnabled(false);
        Pselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PselectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(175, 175, 175)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(Pselect, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pselect, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ControlMusica.pausarReanudar();

        if (ControlMusica.estaPausada()) {
            cambiarIcono(jButton2, "/misClases/recursos/playBtn.png");
        } else {
            cambiarIcono(jButton2, "/misClases/recursos/pauseBtn.png");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();  
        JFramePresentacionJuego presentacion = new JFramePresentacionJuego();
        presentacion.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void PselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PselectActionPerformed
        this.dispose();  
        JFrameTablero tablero = new JFrameTablero();
        tablero.setVisible(true);
    }//GEN-LAST:event_PselectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePersonaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePersonaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePersonaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePersonaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePersonaje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Pselect;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void cambiarIcono(javax.swing.JButton boton, String rutaImagen) {
        ImageIcon originalIcon = new ImageIcon(getClass().getResource(rutaImagen));
        Image img = originalIcon.getImage().getScaledInstance(boton.getWidth(), boton.getHeight(), Image.SCALE_SMOOTH);
        boton.setIcon(new ImageIcon(img));
    }
    
    private void generarTableroPersonajes() {
        // Paso 1: Lista de imágenes
        List<String> imagenes = new ArrayList<>();
        Collections.addAll(imagenes,
            "/misClases/recursos/personajes/p1.jpg",
            "/misClases/recursos/personajes/p2.jpg",
            "/misClases/recursos/personajes/p3.jpg",
            "/misClases/recursos/personajes/p4.jpg",
            "/misClases/recursos/personajes/p5.jpg",
            "/misClases/recursos/personajes/p6.jpg",
            "/misClases/recursos/personajes/p7.jpg",
            "/misClases/recursos/personajes/p8.jpg",
            "/misClases/recursos/personajes/p9.jpg",
            "/misClases/recursos/personajes/p10.jpg",
            "/misClases/recursos/personajes/p11.jpg",
            "/misClases/recursos/personajes/p12.jpg",
            "/misClases/recursos/personajes/p13.jpg",
            "/misClases/recursos/personajes/p14.jpg",
            "/misClases/recursos/personajes/p15.jpg",
            "/misClases/recursos/personajes/p16.jpg",
            "/misClases/recursos/personajes/p17.jpg",
            "/misClases/recursos/personajes/p18.jpg",
            "/misClases/recursos/personajes/p19.jpg",
            "/misClases/recursos/personajes/p20.jpg",
            "/misClases/recursos/personajes/p21.jpg",
            "/misClases/recursos/personajes/p22.jpg",
            "/misClases/recursos/personajes/p23.jpg",
            "/misClases/recursos/personajes/p24.jpg",
            "/misClases/recursos/personajes/p25.jpg",
            "/misClases/recursos/personajes/p26.jpg",
            "/misClases/recursos/personajes/p27.jpg",
            "/misClases/recursos/personajes/p28.jpg",
            "/misClases/recursos/personajes/p29.jpg",
            "/misClases/recursos/personajes/p30.jpg",
            "/misClases/recursos/personajes/p31.jpg",
            "/misClases/recursos/personajes/p32.jpg",
            "/misClases/recursos/personajes/p33.jpg",
            "/misClases/recursos/personajes/p34.jpg"     
        );

        // Paso 2: Barajar y tomar solo 24
        Collections.shuffle(imagenes);
        List<String> seleccionados = imagenes;

        // Paso 3: Configurar el panel
        jPanel2.removeAll();
        jPanel2.setLayout(new GridLayout(5, 7, 20, 20));



        // Paso 4: Crear y añadir los botones
        for (String ruta : seleccionados) {
            JButton boton = new JButton();

            // Icono
            java.net.URL url = getClass().getResource(ruta);
            if (url != null) {
                ImageIcon icono = new ImageIcon(url);
                Image imagen = icono.getImage().getScaledInstance(65, 85, Image.SCALE_SMOOTH);
                boton.setIcon(new ImageIcon(imagen));
            } else {
                boton.setText("No encontrada");
            }


            boton.setText(null); // Quita texto
            boton.setBorderPainted(false); // Quita borde
            boton.setContentAreaFilled(false); // Hace fondo transparente
            boton.setFocusPainted(false); // Quita el marco cuando se enfoca
            
            //String nombre = ruta.substring(ruta.lastIndexOf("/") + 1).replace(".jpg", "");
            // Acción cuando se elige
            /*boton.addActionListener(e -> {
                JOptionPane.showMessageDialog(this, "Seleccionaste a: " + nombre);
            });*/
            boton.addActionListener(e -> {
                String nombre = ruta.substring(ruta.lastIndexOf("/") + 1).replace(".png", "");
                String jugadorSeleccionado = nombre;
                //JOptionPane.showMessageDialog(this, "Seleccionaste a: " + nombre);

                Pselect.setVisible(true);   // Ahora aparece
                Pselect.setEnabled(true);   // Y se puede usar
            });
            
            jPanel2.add(boton);
        }

        jPanel2.revalidate();
        jPanel2.repaint();
    }

    
}


/*
private JButton[] botones = new JButton[24]; // Los 24 botones
    public static JButton aleatorio = new JButton("Personaje aleatorio"); // botón aleatorio
    public static JButton avanzar=new JButton("Avanzar");//boton para pasar al juego ya pa jugar
    
    public void PTSelec(String[] rutasImagenes) {//Funcion para imprimir el tablero de la seleccion de personaje conforme a lo que se necesita en este
        removeAll();
        setLayout(new BorderLayout()); // Layout general del panel principal

        // Panel para el botón aleatorio (centrado arriba)
        JPanel panelSuperior = new JPanel();
        panelSuperior.setLayout(new FlowLayout(FlowLayout.CENTER)); // Centra el botó  n
        panelSuperior.add(aleatorio);
        add(panelSuperior, BorderLayout.NORTH);
        
        // Panel para el botón avanzar (medio derecha)
        JPanel panelInferior = new JPanel();
        panelInferior.setLayout(new FlowLayout(FlowLayout.RIGHT));
        panelInferior.add(avanzar);
        add(panelInferior, BorderLayout.EAST);

        // Panel para los 24 botones de personajes
        JPanel panelBotones = new JPanel(new GridLayout(6, 4, 120, 8));
        for (int i = 0; i < 24; i++) {
            JButton boton = new JButton();

            java.net.URL url = getClass().getResource(rutasImagenes[i]);
            if (url != null) {
                ImageIcon icono = new ImageIcon(url);
                Image imagen = icono.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH);
                boton.setIcon(new ImageIcon(imagen));
            } else {
                boton.setText("Imagen no encontrada");
            }

            String nombre = rutasImagenes[i].substring(rutasImagenes[i].lastIndexOf("/") + 1);
            nombre = nombre.replace(".png", "");
            boton.setText(nombre);

            boton.setHorizontalTextPosition(JButton.CENTER);
            boton.setVerticalTextPosition(JButton.BOTTOM);

            final String nombreJugador = nombre; // variable final para usar dentro del lambda
            boton.addActionListener(e -> {
                Juego.jugadorAle = nombreJugador;
                Juego.MJ.mostrarJugador("Seleccionaste a: ");
                //System.out.println(Juego.jugadorAle);
            });

            botones[i] = boton;
            panelBotones.add(boton);
        }
        // Añadir el panel de botones al centro del panel principal
        add(panelBotones, BorderLayout.CENTER);
        revalidate(); 
        repaint();
    }
    
public class Code {
        public static List<String> imagenes=new ArrayList<>();//Lista para guardar las 34 imagenes
        public static String[] imagenestablero=new String[24];//Array para los 24 jugasores con los que se juega

        //Funcion para cargar las imagenes de manera manual
        public void cargarImagenes(){
            imagenes.clear(); // LIMPIA antes de volver a cargar
            imagenes.add("/JugadoresProyecto/Andres Iniesta.png");
            imagenes.add("/JugadoresProyecto/Cannavaro.png");
            imagenes.add("/JugadoresProyecto/Carlos Vela.png");
            imagenes.add("/JugadoresProyecto/Cristiano Ronaldo.png");
            imagenes.add("/JugadoresProyecto/Drogba.png");
            imagenes.add("/JugadoresProyecto/Gerson Oliveira.png");
            imagenes.add("/JugadoresProyecto/Giovani Dos Santos.png");
            imagenes.add("/JugadoresProyecto/Gullit P.png");
            imagenes.add("/JugadoresProyecto/Harry Kane.png");
            imagenes.add("/JugadoresProyecto/Hector Herrera.png");
            imagenes.add("/JugadoresProyecto/Hugo Sanchez.png");
            imagenes.add("/JugadoresProyecto/Javier Hernandez.png");
            imagenes.add("/JugadoresProyecto/Johan Cruyff.png");
            imagenes.add("/JugadoresProyecto/Jorge Campos.png");
            imagenes.add("/JugadoresProyecto/Kevin De Bruyne.png");
            imagenes.add("/JugadoresProyecto/Lamine Yamal.png");
            imagenes.add("/JugadoresProyecto/Maradona.png");
            imagenes.add("/JugadoresProyecto/Marcelo Vieira.png");
            imagenes.add("/JugadoresProyecto/Mbappe.png");
            imagenes.add("/JugadoresProyecto/Messi.png");
            imagenes.add("/JugadoresProyecto/Modric.png");
            imagenes.add("/JugadoresProyecto/NeymarJR.png");
            imagenes.add("/JugadoresProyecto/Pele.png");
            imagenes.add("/JugadoresProyecto/Puyol.png");
            imagenes.add("/JugadoresProyecto/Rafa Marquez.png");
            imagenes.add("/JugadoresProyecto/Roberto Baggio.png");
            imagenes.add("/JugadoresProyecto/Roberto Carlos.png");
            imagenes.add("/JugadoresProyecto/Ronaldinho.png");
            imagenes.add("/JugadoresProyecto/Ronaldo Nazario.png");
            imagenes.add("/JugadoresProyecto/Sergio Ramos.png");
            imagenes.add("/JugadoresProyecto/Thiago Silva.png");
            imagenes.add("/JugadoresProyecto/Thierry Henry.png");
            imagenes.add("/JugadoresProyecto/Xavi Hernandez.png");
            imagenes.add("/JugadoresProyecto/Zidane.png");
        }

        //Funcion para llenar el vector
        public void llenarVector(){
            Collections.shuffle(imagenes);//se hace un acomodo aleatorio de la lista
            for(int i=0;i<24;i++){
                imagenestablero[i]=imagenes.get(i);//Se guarda el jugador de la posicion i de la lista en la posicion i del vector
            }
        }

        public void mostrarJugador(String mensaje){//se le manda un mensaje para poner antes del jugador, seleccionaste o te toco
            JOptionPane.showMessageDialog(null, mensaje + Juego.jugadorAle);
        }


    }

*/